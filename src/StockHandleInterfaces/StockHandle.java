/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StockHandleInterfaces;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import DBConnect.DBconnect;
import ae.java.awt.Font;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import mainInterface.MainPage;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.UnsupportedLookAndFeelException;




/**
 *
 * @author User
 */
public class StockHandle extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement state = null;
    ResultSet rs = null;
    
    /**
     * Creates new form StockHandle
     */
    public StockHandle() {
        initComponents();
        
        //connect to DB
        con = DBconnect.getConnection();
        
        //load stock and production tables
        stockTableload();
        productionTableLoad();
        historyTableLoad();
    }
    
    public void stockTableload(){
        //Display the table with added values 
        try {
            String sql = "SELECT tid as 'stock Id', ttype as 'tea grade', tweight as 'tea weight', trate as 'daily rate', tvalue as 'total value', tdate as 'date' FROM stock";
            state = con.prepareStatement(sql);
            rs = state.executeQuery();
            
            stocktable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
    public void productionTableLoad(){
        //Display the table with added values from production table
         try {
            String sql = "SELECT ptype as 'tea grade', pdate as 'production date' FROM production_stock";
            state = con.prepareStatement(sql);
            rs = state.executeQuery();
            
            productiontable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void historyTableLoad(){
        //Display the table with added values from production table
         try {
            String sql = "SELECT tid as 'stock Id', ttype as 'tea grade', tweight as 'tea weight', trate as 'daily rate', tvalue as 'total value', tdate as 'date' FROM stock_history";
            state = con.prepareStatement(sql);
            rs = state.executeQuery();
            
            historytable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void clear(){
        //Clear textboxes
        idlabel.setText("");
        weightbox.setText("");
        valuebox.setText("");
        datepicker.setDate(null);
        typebox.setSelectedItem("Select tea grade");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productiontable = new javax.swing.JTable();
        idlabel = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        totalbox = new javax.swing.JTextField();
        deletebtn = new javax.swing.JButton();
        totalbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        searchbox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        datepicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        weightbox = new javax.swing.JTextField();
        valuebox = new javax.swing.JTextField();
        typebox = new javax.swing.JComboBox<>();
        addbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stocktable = new javax.swing.JTable();
        reportbtn = new javax.swing.JButton();
        canclebtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        historytable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        searchbox1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("ID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        productiontable.setBackground(new java.awt.Color(204, 255, 255));
        productiontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "pgrade", "pdate"
            }
        ));
        productiontable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productiontableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productiontable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 471, 122));

        idlabel.setText("ID");
        jPanel1.add(idlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, -1, -1));

        updatebtn.setBackground(new java.awt.Color(0, 204, 102));
        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-restart-48.png"))); // NOI18N
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        jPanel1.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 140, -1));
        jPanel1.add(totalbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 480, 160, -1));

        deletebtn.setBackground(new java.awt.Color(255, 102, 102));
        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-delete-48.png"))); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel1.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 130, -1));

        totalbtn.setBackground(new java.awt.Color(204, 204, 204));
        totalbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalbtn.setText("Calculate daily total");
        totalbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalbtnMouseClicked(evt);
            }
        });
        totalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalbtnActionPerformed(evt);
            }
        });
        jPanel1.add(totalbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 480, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Search by Date");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 540, -1, -1));

        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchboxKeyPressed(evt);
            }
        });
        jPanel1.add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 310, 145, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Date");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, -1));
        jPanel1.add(datepicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 165, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tea Grade");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Weight");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Rate (Rs)");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        weightbox.setToolTipText("ex-:1000.1234");
        weightbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightboxActionPerformed(evt);
            }
        });
        jPanel1.add(weightbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 165, -1));
        weightbox.getAccessibleContext().setAccessibleName("");

        valuebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueboxActionPerformed(evt);
            }
        });
        jPanel1.add(valuebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 165, -1));

        typebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select tea grade", "BOP", "BOPF", "FBOPF", "FBOP", "DUST", "GC", "OP" }));
        jPanel1.add(typebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 147, -1));

        addbtn.setBackground(new java.awt.Color(0, 204, 102));
        addbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-plus-48.png"))); // NOI18N
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel1.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 130, 60));

        stocktable.setBackground(new java.awt.Color(204, 255, 255));
        stocktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tea_grade", "Tea_weight", "Tea_rate", "Total_value", "Stock_date"
            }
        ));
        stocktable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stocktableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stocktable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 340, 480, 123));

        reportbtn.setBackground(new java.awt.Color(102, 204, 255));
        reportbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reportbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-graph-report-48.png"))); // NOI18N
        reportbtn.setText("Report");
        reportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportbtnActionPerformed(evt);
            }
        });
        jPanel1.add(reportbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 570, 140, -1));

        canclebtn.setBackground(new java.awt.Color(255, 102, 102));
        canclebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        canclebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-cancel-48.png"))); // NOI18N
        canclebtn.setText("Cancel");
        canclebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canclebtnActionPerformed(evt);
            }
        });
        jPanel1.add(canclebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 490, 140, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Kalana Header.jpg"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 120));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("History");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 540, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("kg");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, -1, -1));

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-trial-40.png"))); // NOI18N
        jButton1.setText(" Demo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 130, 60));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Daily Stock Table");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, -1, -1));

        historytable.setBackground(new java.awt.Color(204, 255, 255));
        historytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tea_grade", "Tea_weight", "Tea_rate", "Total_value", "Stock_date"
            }
        ));
        historytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historytableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(historytable);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 570, 480, 123));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Product Table");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Search by Type");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 310, -1, -1));

        searchbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbox1ActionPerformed(evt);
            }
        });
        searchbox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchbox1KeyPressed(evt);
            }
        });
        jPanel1.add(searchbox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 540, 145, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void productiontableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productiontableMouseClicked
        int raw = productiontable.getSelectedRow();

        String type = productiontable.getValueAt(raw, 0).toString();
        Date date = (Date) productiontable.getValueAt(raw, 1);

        typebox.setSelectedItem(type);
        datepicker.setDate(date);
        
        updatebtn.setEnabled(false);
        deletebtn.setEnabled(false);
        addbtn.setEnabled(true);
    }//GEN-LAST:event_productiontableMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed

        int x = JOptionPane.showConfirmDialog(null, "Do you really want to update?");

        if(x == 0){
            String id = idlabel.getText();
            String type = typebox.getSelectedItem().toString();

            double weight = 0;
            double val = 0;

            try{
                weight = Double.parseDouble(weightbox.getText());
                val = Double.parseDouble(valuebox.getText());
            }catch(NumberFormatException | NullPointerException e){
                JOptionPane.showMessageDialog(null, "Please correct Weight section");
                return;
            }
            
            try{
                val = Double.parseDouble(valuebox.getText());
            }catch(NumberFormatException | NullPointerException e){
                JOptionPane.showMessageDialog(null, "Please correct Value section");
                return;
            }
            
            if(weight <= 0 || val <= 0 ){
                JOptionPane.showMessageDialog(null, "Can't enter minus value");
                return;
            }

            double total = weight * val;
            
            if(type == "Select tea grade"){
                JOptionPane.showMessageDialog(null, "Please correct the tea type");
                return;
            }

            String value = String.valueOf(total);
            valuebox.getText();

            String stockDate = "";

            try{
                Date date = datepicker.getDate();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                stockDate = dateFormat.format(date);
            }catch(NullPointerException e){
                JOptionPane.showMessageDialog(null, "Please correct the Date");
                return;
            }

            try {
                //Update details of selected raw
                String sql = "UPDATE stock SET ttype = '"+ type +"', tweight = '"+ weight +"', trate = '"+ val +"', tvalue = '"+ value +"', tdate = '"+ stockDate +"' WHERE tid = '"+ id +"'";
                state = con.prepareStatement(sql);
                state.execute();
                
                String sql3 = "UPDATE stock_history SET ttype = '"+ type +"', tweight = '"+ weight +"', trate = '"+ val +"', tvalue = '"+ value +"', tdate = '"+ stockDate +"' WHERE tid = '"+ id +"'";
                state = con.prepareStatement(sql3);
                state.execute();
                
                String sql1 = "INSERT INTO finance_stock (year, month, total) SELECT YEAR(tdate)as 'Year',MONTHNAME(tdate)as 'Month', SUM(tvalue) as 'Total value (Rs)' FROM stock GROUP BY MONTH(tdate),YEAR(tdate) ";
                state = con.prepareStatement(sql1);
                state.execute();

                stockTableload();
                historyTableLoad();
                
                //clear the textboxes
                clear();

            } catch (SQLException ex) {
                Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
            }
            addbtn.setEnabled(true);
        }
        else{
            addbtn.setEnabled(true);
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed

        int x = JOptionPane.showConfirmDialog(null, "Do you really want to delete this record?");

        if(x == 0){

            String id = idlabel.getText();

            try {
                //Delete details of selected raw
                String sql = "DELETE FROM stock WHERE tid = '"+ id +"'";
                state = con.prepareStatement(sql);
                state.execute();

                String sql1 = "INSERT INTO finance_stock (year, month, total) SELECT YEAR(tdate)as 'Year',MONTHNAME(tdate)as 'Month', SUM(tvalue) as 'Total value (Rs)' FROM stock GROUP BY MONTH(tdate),YEAR(tdate) ";
                state = con.prepareStatement(sql1);
                state.execute();
            
                stockTableload();
                //historyTableLoad();
                
                //clear textboxes
                clear();

            } catch (SQLException ex) {
                Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
            }
            addbtn.setEnabled(true);
        }
        else{
            addbtn.setEnabled(true);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void totalbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalbtnMouseClicked

    }//GEN-LAST:event_totalbtnMouseClicked

    private void weightboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightboxActionPerformed

    private void valueboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueboxActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed

        String type = typebox.getSelectedItem().toString();

        //Validate tea grade
        if(type == "Select tea grade"){
            JOptionPane.showMessageDialog(null, "Please correct the tea type");
            return;
        }
        
        double weight = 0;
        double val = 0;

        
        
        //Validate weight and value
        try{
            weight = Double.parseDouble(weightbox.getText());
            val = Double.parseDouble(valuebox.getText());
        }catch(NumberFormatException | NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please correct Weight section");
            return;
        }
        
         try{
            val = Double.parseDouble(valuebox.getText());
        }catch(NumberFormatException | NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please correct Rate section");
            return;
        }
         
        if(weight <= 0 || val <= 0 ){
            JOptionPane.showMessageDialog(null, "Can't enter minus value");
            return;
        }

        //Calculate total value of a grade
        double total = weight * val;

        String value = String.valueOf(total);
        valuebox.setText(value);

        

        String stockDate = "";

        //Validate Date
        try{
            
            Date date = datepicker.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            stockDate = dateFormat.format(date);
            
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please correct the Date");
            return;
        }
        
       

        try {
            //Add values to database
            String query = "INSERT INTO stock (ttype,tweight,trate,tvalue,tdate) VALUES ('"+ type +"', '"+ weight +"','"+val+"', '"+ value +"', '"+ stockDate +"')";
            state = con.prepareStatement(query);
            state.execute();
            
            String query1 = "INSERT INTO stock_history (ttype,tweight,trate,tvalue,tdate) VALUES ('"+ type +"', '"+ weight +"','"+val+"', '"+ value +"', '"+ stockDate +"')";
            state = con.prepareStatement(query1);
            state.execute();
            
            String sql = "INSERT INTO finance_stock (year, month, total) SELECT YEAR(tdate)as 'Year',MONTHNAME(tdate)as 'Month', SUM(tvalue) as 'Total value (Rs)' FROM stock GROUP BY MONTH(tdate),YEAR(tdate) ";
            state = con.prepareStatement(sql);
            state.execute();

            //Load table
            stockTableload();
            historyTableLoad();
            
            updatebtn.setEnabled(true);
            deletebtn.setEnabled(true);
            
            String grade = typebox.getSelectedItem().toString();

         
            //Delete details of selected raw
            String sql1 = "DELETE FROM production_stock WHERE ptype = '"+ grade +"'";
            state = con.prepareStatement(sql1);
            state.execute();

            productionTableLoad();
            
            //Clear textboxes
            clear();

            

        } catch (SQLException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_addbtnActionPerformed

    private void stocktableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stocktableMouseClicked

        //Assign selected raw into variable
        int raw = stocktable.getSelectedRow();

        //Assign values into suitable variables
        String id = stocktable.getValueAt(raw, 0).toString();
        String type = stocktable.getValueAt(raw, 1).toString();
        String weight = stocktable.getValueAt(raw, 2).toString();
        String rate = stocktable.getValueAt(raw, 3).toString();
        String value = stocktable.getValueAt(raw, 4).toString();
        Date date = (Date) stocktable.getValueAt(raw, 5);

        //Set and display all values to textboxes
        idlabel.setText(id);
        typebox.setSelectedItem(type);
        weightbox.setText(weight);
        valuebox.setText(rate);
        datepicker.setDate(date);
        
        addbtn.setEnabled(false);

    }//GEN-LAST:event_stocktableMouseClicked

    private void reportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportbtnActionPerformed
        
        double total = 0;
        
        try{
            total = Double.parseDouble(totalbox.getText());
        }catch(NumberFormatException | NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please Calculate total before genarate report");
            return;
        }
        
        try {
            
            String sql = "SELECT tid,ttype,tweight,trate,tvalue,tdate FROM stock";
            state = con.prepareStatement(sql);
            rs = state.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();

            int rowNo = 0;
            while(rs.next()){
                rowNo++;
            }
            rs.first();

            Document document = new Document();
            PdfWriter.getInstance(document,new FileOutputStream("Stock Report.pdf"));
            
            PdfPTable pt = new PdfPTable(colNo);

            document.open();
            
            Image image = Image.getInstance("reporthead.png");
            image.scaleToFit(500, 2500);
            document.add(image);
            
            document.add(new Paragraph(" "));

            document.add(new Paragraph("                                                                                                          "+new Date().toString()));
            document.add(new Paragraph("______________________________________________________________________________"));
            document.add(new Paragraph(" "));
            document.add(new Paragraph("                                                      Stock Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 16, Font.BOLD, BaseColor.BLACK)));
            document.add(new Paragraph(" "));

            pt.addCell(new Paragraph("tid", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK))); 
            pt.addCell(new Paragraph("Tea type", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));
            pt.addCell(new Paragraph("Weight(Kg)", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));
            pt.addCell(new Paragraph("Rate", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));
            pt.addCell(new Paragraph("Total Value", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));
            pt.addCell(new Paragraph("Date", FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));

            for(int i = 0; i < rowNo; i++){
                pt.addCell(""+rs.getString(1));
                pt.addCell(""+rs.getString(2));
                pt.addCell(""+rs.getString(3));
                pt.addCell(""+rs.getString(4));
                pt.addCell(""+rs.getString(5));
                pt.addCell(""+rs.getString(6));
                rs.next();
            }
            document.add(pt);
            
            document.add(new Paragraph(" "));
            document.add(new Paragraph("Total stock value = Rs " + totalbox.getText() + "/=" , FontFactory.getFont(FontFactory.TIMES_BOLD, 12, Font.BOLD, BaseColor.BLACK)));
             
            document.add(new Paragraph(" "));
            document.add(new Paragraph(" "));
            document.add(new Paragraph("                ...................................                                              ...................................",FontFactory.getFont(FontFactory.TIMES_BOLD, 14,java.awt.Font.BOLD, BaseColor.BLACK)));
            
            document.add(new Paragraph("                       Prepared By                                                            Checked By",FontFactory.getFont(FontFactory.TIMES_BOLD, 14,java.awt.Font.BOLD, BaseColor.BLACK)));
            document.add(new Paragraph("  "));
            document.add(new Paragraph("                This is an Automatic Generated Invoice.   If there is any problem ,Please contact us..."));
            document.add(new Paragraph("                 Phone no : 0452274364   Fax : +94 (0)  45 2262210   Email : galpaditenna@gmail.com"));
            document.close();

            JOptionPane.showMessageDialog(null, "Report saved");

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Report not saved");
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            JOptionPane.showMessageDialog(null, "Report not saved");
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Report not saved");
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_reportbtnActionPerformed

    private void canclebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canclebtnActionPerformed
        MainPage main = new MainPage();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_canclebtnActionPerformed

    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchboxActionPerformed

    private void totalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalbtnActionPerformed
       
        //Calculate total value of stock
        double total = 0;

        for(int i = 0; i < stocktable.getRowCount(); i++)
        {
            total = total + Double.parseDouble(stocktable.getValueAt(i, 4).toString());
        }

        totalbox.setText(Double.toString(total));
    }//GEN-LAST:event_totalbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        weightbox.setText("1200.2525");
        valuebox.setText("100");
        datepicker.setDate(null);
        typebox.setSelectedItem("BOPF");
        
        addbtn.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyPressed
        String type = searchbox.getText();

        try {

            String sql = "SELECT tid, ttype, tweight, trate, tvalue, tdate FROM stock WHERE ttype LIKE '%"+ type +"%'";
            state = con.prepareStatement(sql);
            rs = state.executeQuery();

            stocktable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(StockHandle.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_searchboxKeyPressed

    private void historytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historytableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_historytableMouseClicked

    private void searchbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchbox1ActionPerformed

    private void searchbox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbox1KeyPressed
         
        String date = searchbox1.getText();

        try {
            
            String sss = "SELECT * FROM stock_history WHERE tdate LIKE '%"+date+"%' ";
            state = con.prepareStatement(sss);
            rs = state.executeQuery();
           
            historytable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_searchbox1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockHandle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockHandle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockHandle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockHandle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockHandle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton canclebtn;
    private org.jdesktop.swingx.JXDatePicker datepicker;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTable historytable;
    private javax.swing.JLabel idlabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable productiontable;
    private javax.swing.JButton reportbtn;
    private javax.swing.JTextField searchbox;
    private javax.swing.JTextField searchbox1;
    private javax.swing.JTable stocktable;
    private javax.swing.JTextField totalbox;
    private javax.swing.JButton totalbtn;
    private javax.swing.JComboBox<String> typebox;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTextField valuebox;
    private javax.swing.JTextField weightbox;
    // End of variables declaration//GEN-END:variables
}
